{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\XAMPP\\\\htdocs\\\\WerBorsaNew\\\\frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { CSSTransition } from 'react-transition-group'; // Geçiş animasyonları için\nimport './Login.css'; // CSS dosyasını içe aktar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  isOpen,\n  onRequestClose,\n  isRegister,\n  setIsLoggedIn\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [isLoginMode, setIsLoginMode] = useState(!isRegister); // Slider ile login/register arasında geçiş\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccessMessage(null);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/login', {\n        email,\n        password\n      });\n      console.log(response.data);\n      setSuccessMessage('Login successful!');\n      setIsLoggedIn(true); // Giriş başarılı olduğunda durumu güncelle\n      onRequestClose(); // Modalı kapat\n    } catch (error) {\n      if (error.response) {\n        setError(error.response.data.message || 'Invalid credentials');\n      } else {\n        setError('Network error. Please try again later.');\n      }\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccessMessage(null);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/register', {\n        name,\n        email,\n        password,\n        password_confirmation: passwordConfirmation\n      });\n      console.log(response.data);\n      setSuccessMessage('Registration successful!');\n      onRequestClose(); // Kayıt başarılı olduğunda modalı kapat\n    } catch (error) {\n      if (error.response) {\n        setError(error.response.data.message || 'Registration failed');\n      } else {\n        setError('Network error. Please try again later.');\n      }\n    }\n  };\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode); // Giriş ve kayıt modları arasında geçiş yap\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoginMode ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-button\",\n      onClick: toggleMode,\n      children: isLoginMode ? 'Kayıt Ol' : 'Giriş Yap'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: isLoginMode ? handleLogin : handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: isLoginMode,\n        timeout: 500,\n        classNames: {\n          enter: 'form-enter',\n          enterActive: 'form-enter-active',\n          exit: 'form-exit',\n          exitActive: 'form-exit-active'\n        },\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [!isLoginMode && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: passwordConfirmation,\n            onChange: e => setPasswordConfirmation(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLoginMode ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"JFEqgpV1HTfcJKN5SesZkWp0MqA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","CSSTransition","jsxDEV","_jsxDEV","Login","isOpen","onRequestClose","isRegister","setIsLoggedIn","_s","email","setEmail","password","setPassword","name","setName","passwordConfirmation","setPasswordConfirmation","error","setError","successMessage","setSuccessMessage","isLoginMode","setIsLoginMode","handleLogin","e","preventDefault","response","post","console","log","data","message","handleRegister","password_confirmation","toggleMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","in","timeout","classNames","enter","enterActive","exit","exitActive","unmountOnExit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Program Files/XAMPP/htdocs/WerBorsaNew/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { CSSTransition } from 'react-transition-group'; // Geçiş animasyonları için\r\nimport './Login.css'; // CSS dosyasını içe aktar\r\n\r\nconst Login = ({ isOpen, onRequestClose, isRegister, setIsLoggedIn }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n    const [isLoginMode, setIsLoginMode] = useState(!isRegister); // Slider ile login/register arasında geçiş\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        setSuccessMessage(null);\r\n\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:8000/api/login', {\r\n                email,\r\n                password,\r\n            });\r\n            console.log(response.data);\r\n            setSuccessMessage('Login successful!');\r\n            setIsLoggedIn(true); // Giriş başarılı olduğunda durumu güncelle\r\n            onRequestClose(); // Modalı kapat\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setError(error.response.data.message || 'Invalid credentials');\r\n            } else {\r\n                setError('Network error. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        setSuccessMessage(null);\r\n\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:8000/api/register', {\r\n                name,\r\n                email,\r\n                password,\r\n                password_confirmation: passwordConfirmation,\r\n            });\r\n            console.log(response.data);\r\n            setSuccessMessage('Registration successful!');\r\n            onRequestClose(); // Kayıt başarılı olduğunda modalı kapat\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setError(error.response.data.message || 'Registration failed');\r\n            } else {\r\n                setError('Network error. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleMode = () => {\r\n        setIsLoginMode(!isLoginMode); // Giriş ve kayıt modları arasında geçiş yap\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-modal\">\r\n            <h2>{isLoginMode ? 'Login' : 'Register'}</h2>\r\n            {error && <div className=\"error\">{error}</div>}\r\n            {successMessage && <div className=\"success\">{successMessage}</div>}\r\n\r\n            {/* Slider için buton */}\r\n            <button className=\"toggle-button\" onClick={toggleMode}>\r\n                {isLoginMode ? 'Kayıt Ol' : 'Giriş Yap'}\r\n            </button>\r\n\r\n            <form onSubmit={isLoginMode ? handleLogin : handleRegister}>\r\n                <CSSTransition\r\n                    in={isLoginMode}\r\n                    timeout={500}\r\n                    classNames={{\r\n                        enter: 'form-enter',\r\n                        enterActive: 'form-enter-active',\r\n                        exit: 'form-exit',\r\n                        exitActive: 'form-exit-active',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <div>\r\n                        {!isLoginMode && (\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                required\r\n                            />\r\n                        )}\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                        {!isLoginMode && (\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={passwordConfirmation}\r\n                                onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n                                required\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </CSSTransition>\r\n                <button type=\"submit\">{isLoginMode ? 'Login' : 'Register'}</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}