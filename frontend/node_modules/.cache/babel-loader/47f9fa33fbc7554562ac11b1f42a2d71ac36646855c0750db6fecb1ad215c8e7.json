{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\XAMPP\\\\htdocs\\\\WerBorsaNew\\\\frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Login.css\"; // CSS dosyasını içe aktar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  isOpen,\n  onRequestClose,\n  isRegister,\n  setIsLoggedIn\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [isLoginMode, setIsLoginMode] = useState(!isRegister); // Slider ile login/register arasında geçiş\n\n  if (!isOpen) {\n    return null; // Eğer modal açık değilse, bileşeni hiç render etme\n  }\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccessMessage(null);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/login\", {\n        email,\n        password\n      });\n      console.log(response.data);\n      setSuccessMessage(\"Login successful!\");\n      setIsLoggedIn(true); // Giriş başarılı olduğunda durumu güncelle\n      onRequestClose(); // Modalı kapat\n    } catch (error) {\n      if (error.response) {\n        setError(error.response.data.message || \"Invalid credentials\");\n      } else {\n        setError(\"Network error. Please try again later.\");\n      }\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccessMessage(null);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/register\", {\n        name,\n        email,\n        password,\n        password_confirmation: passwordConfirmation\n      });\n      console.log(response.data);\n      setSuccessMessage(\"Registration successful!\");\n      onRequestClose(); // Kayıt başarılı olduğunda modalı kapat\n    } catch (error) {\n      if (error.response) {\n        setError(error.response.data.message || \"Registration failed\");\n      } else {\n        setError(\"Network error. Please try again later.\");\n      }\n    }\n  };\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode); // Giriş ve kayıt modları arasında geçiş yap\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal position-relative p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: isLoginMode ? \"Login\" : \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn toggle-button position-absolute top-0 end-0\",\n      onClick: toggleMode,\n      children: isLoginMode ? \"Kayıt Ol\" : \"Giriş Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: isLoginMode ? handleLogin : handleRegister,\n      className: \"mt-4\",\n      children: [!isLoginMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Confirm Password\",\n          value: passwordConfirmation,\n          onChange: e => setPasswordConfirmation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        children: isLoginMode ? \"Login\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/PbERLeQKD5fL+IyEmI/0TDnuG4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","isOpen","onRequestClose","isRegister","setIsLoggedIn","_s","email","setEmail","password","setPassword","name","setName","passwordConfirmation","setPasswordConfirmation","error","setError","successMessage","setSuccessMessage","isLoginMode","setIsLoginMode","handleLogin","e","preventDefault","response","post","console","log","data","message","handleRegister","password_confirmation","toggleMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Program Files/XAMPP/htdocs/WerBorsaNew/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\"; // CSS dosyasını içe aktar\r\n\r\nconst Login = ({ isOpen, onRequestClose, isRegister, setIsLoggedIn }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [isLoginMode, setIsLoginMode] = useState(!isRegister); // Slider ile login/register arasında geçiş\r\n\r\n  if (!isOpen) {\r\n    return null; // Eğer modal açık değilse, bileşeni hiç render etme\r\n  }\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccessMessage(null);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:8000/api/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      console.log(response.data);\r\n      setSuccessMessage(\"Login successful!\");\r\n      setIsLoggedIn(true); // Giriş başarılı olduğunda durumu güncelle\r\n      onRequestClose(); // Modalı kapat\r\n    } catch (error) {\r\n      if (error.response) {\r\n        setError(error.response.data.message || \"Invalid credentials\");\r\n      } else {\r\n        setError(\"Network error. Please try again later.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccessMessage(null);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:8000/api/register\", {\r\n        name,\r\n        email,\r\n        password,\r\n        password_confirmation: passwordConfirmation,\r\n      });\r\n      console.log(response.data);\r\n      setSuccessMessage(\"Registration successful!\");\r\n      onRequestClose(); // Kayıt başarılı olduğunda modalı kapat\r\n    } catch (error) {\r\n      if (error.response) {\r\n        setError(error.response.data.message || \"Registration failed\");\r\n      } else {\r\n        setError(\"Network error. Please try again later.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    setIsLoginMode(!isLoginMode); // Giriş ve kayıt modları arasında geçiş yap\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-modal position-relative p-4\">\r\n      <h2 className=\"text-center\">{isLoginMode ? \"Login\" : \"Register\"}</h2>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {successMessage && (\r\n        <div className=\"alert alert-success\">{successMessage}</div>\r\n      )}\r\n\r\n      {/* Toggle Mode için buton */}\r\n      <button\r\n        className=\"btn toggle-button position-absolute top-0 end-0\"\r\n        onClick={toggleMode}\r\n      >\r\n        {isLoginMode ? \"Kayıt Ol\" : \"Giriş Yap\"}\r\n      </button>\r\n\r\n      <form\r\n        onSubmit={isLoginMode ? handleLogin : handleRegister}\r\n        className=\"mt-4\"\r\n      >\r\n        {!isLoginMode && (\r\n          <div className=\"mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"mb-3\">\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {!isLoginMode && (\r\n          <div className=\"mb-3\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Confirm Password\"\r\n              value={passwordConfirmation}\r\n              onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n          {isLoginMode ? \"Login\" : \"Register\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,CAACO,UAAU,CAAC,CAAC,CAAC;;EAE7D,IAAI,CAACF,MAAM,EAAE;IACX,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,MAAMmB,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC,IAAI,CAAC;IACdE,iBAAiB,CAAC,IAAI,CAAC;IAEvB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,iCAAiC,EAAE;QACnElB,KAAK;QACLE;MACF,CAAC,CAAC;MACFiB,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BV,iBAAiB,CAAC,mBAAmB,CAAC;MACtCb,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;MACrBF,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd,IAAIA,KAAK,CAACS,QAAQ,EAAE;QAClBR,QAAQ,CAACD,KAAK,CAACS,QAAQ,CAACI,IAAI,CAACC,OAAO,IAAI,qBAAqB,CAAC;MAChE,CAAC,MAAM;QACLb,QAAQ,CAAC,wCAAwC,CAAC;MACpD;IACF;EACF,CAAC;EAED,MAAMc,cAAc,GAAG,MAAOR,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC,IAAI,CAAC;IACdE,iBAAiB,CAAC,IAAI,CAAC;IAEvB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,oCAAoC,EAAE;QACtEd,IAAI;QACJJ,KAAK;QACLE,QAAQ;QACRsB,qBAAqB,EAAElB;MACzB,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BV,iBAAiB,CAAC,0BAA0B,CAAC;MAC7Cf,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd,IAAIA,KAAK,CAACS,QAAQ,EAAE;QAClBR,QAAQ,CAACD,KAAK,CAACS,QAAQ,CAACI,IAAI,CAACC,OAAO,IAAI,qBAAqB,CAAC;MAChE,CAAC,MAAM;QACLb,QAAQ,CAAC,wCAAwC,CAAC;MACpD;IACF;EACF,CAAC;EAED,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACvBZ,cAAc,CAAC,CAACD,WAAW,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACEnB,OAAA;IAAKiC,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDlC,OAAA;MAAIiC,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEf,WAAW,GAAG,OAAO,GAAG;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpEvB,KAAK,iBAAIf,OAAA;MAAKiC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC1DrB,cAAc,iBACbjB,OAAA;MAAKiC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAEjB;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAC3D,eAGDtC,OAAA;MACEiC,SAAS,EAAC,iDAAiD;MAC3DM,OAAO,EAAEP,UAAW;MAAAE,QAAA,EAEnBf,WAAW,GAAG,UAAU,GAAG;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAETtC,OAAA;MACEwC,QAAQ,EAAErB,WAAW,GAAGE,WAAW,GAAGS,cAAe;MACrDG,SAAS,EAAC,MAAM;MAAAC,QAAA,GAEf,CAACf,WAAW,iBACXnB,OAAA;QAAKiC,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBlC,OAAA;UACEyC,IAAI,EAAC,MAAM;UACXR,SAAS,EAAC,cAAc;UACxBS,WAAW,EAAC,MAAM;UAClBC,KAAK,EAAEhC,IAAK;UACZiC,QAAQ,EAAGtB,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eACDtC,OAAA;QAAKiC,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBlC,OAAA;UACEyC,IAAI,EAAC,OAAO;UACZR,SAAS,EAAC,cAAc;UACxBS,WAAW,EAAC,OAAO;UACnBC,KAAK,EAAEpC,KAAM;UACbqC,QAAQ,EAAGtB,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtC,OAAA;QAAKiC,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBlC,OAAA;UACEyC,IAAI,EAAC,UAAU;UACfR,SAAS,EAAC,cAAc;UACxBS,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAElC,QAAS;UAChBmC,QAAQ,EAAGtB,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACL,CAACnB,WAAW,iBACXnB,OAAA;QAAKiC,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBlC,OAAA;UACEyC,IAAI,EAAC,UAAU;UACfR,SAAS,EAAC,cAAc;UACxBS,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAE9B,oBAAqB;UAC5B+B,QAAQ,EAAGtB,CAAC,IAAKR,uBAAuB,CAACQ,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UACzDG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eACDtC,OAAA;QAAQyC,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EACpDf,WAAW,GAAG,OAAO,GAAG;MAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChC,EAAA,CAtIIL,KAAK;AAAA8C,EAAA,GAAL9C,KAAK;AAwIX,eAAeA,KAAK;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}